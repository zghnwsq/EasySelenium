#生成requirements.txt文件
pip freeze > requirements.txt

#安装requirements.txt依赖
pip install -r requirements.txt

# pywin32额外依赖
Microsoft Visual C++ Redistributable for Visual Studio 2019

# Edge驱动
DISM.exe /Online /Add-Capability /CapabilityName:Microsoft.WebDriver~~~~0.0.1.0

# autotest数据库

表：run_his
id ,class varchar(32), sub_class varchar(32),title varchar(64) not null, desc varchar(200), tester varchar(32) not null, comment varchar(200), report varchar(100),
result varchar(1), create_time time, update_time time

表：res_dict
id, result varchar(1) unique not null, desc varchar(32) not null

# 接口测试自动生成有效、无效请求体
## Model类: 请求体的模型，定义所有字段及字段规则
    generate方法：生成该模型所有字段的有效类和无效类集合

## Field类：字段模型
    generate方法：生成该字段的有效类和无效类集合

## 字段分类：
    allow_None:是否允许空，lt：小于， le：小于等于， gt：大于， ge：大于等于 min_length:最小长度, max_length:最大长度 template:模板
    reg 字符串正则 dict_value_type:字典值类型， dict_value_max:字典值上限(最大数值或字符长度)，format:日期时间格式
    整型：allow_None,lt,le,gt,ge
    浮点：allow_None,lt,le,gt,ge,precision
    字符串：allow_None min_length max_length template reg
    集合：allow_None template value_type
    日期时间：allow_None format ,lt,le,gt,ge

## Template类：请求体模板 去掉这个类
    init增加: template_str, application_type,
    generate_valid_case(valid_class)
        根据模型有效类集合，及传入模板，生成请求体列表
        各字段有效类最大数量即为有效用例数量
    generate_invalid_case(invalid_class)
        根据模型无效类集合，及传入模板，生成请求体列表
        各字段无效类数量之和即为无效用例数量

    KeyError: format找不到对应的参数，抛出

    replace_none方法：遇到none则不传该字段，删除模板中的该字段
    replace_empty方法：遇到empty，该字段传空
    '{{"user": "{user}"}}'
    '{{  "user": "{user}",   "password"  :  "{password}"  ,  "number"  : {info}   }}'
    '{{  "user": "{user}",   "password"  :  ["a": " {a} ", "b": " {b} " ,"c": " {c} "]  ,  "number"  : {info}   }}'
        none的时候考虑：只有1个参数、替换第一个参数、替换中间的参数、替换最后一个参数,替换数字
            不要的部分，在正则中用()包含
            只有1个参数或者列表中只有1个参数: '[\{\[]{1}[\s\"]+\S[^\{]*[\s\"]+:[\s\"]*\{user\}[\s\"]*[\}\]]{1}'
            第一个参数：'[\{\[]{1}([\s\"]+\S[^\{]*[\s\"]+:[\s\"]*\{a\}[\s\"]*,)'
            最后一个参数：'(,[\s\"]+\S[^\{]*[\s\"]+:[\s\"]*\{info\}[\s\"]*)[\}\]]{1}'
            中间参数：',{1}([\s\"]+\S[^\{]*[\s\"]+:[\s\"]*{password}[\s\"]*,{1})'
        empty的时候考虑：数字值和布尔值替换成null
    'user={user}'
    'user={user}&password={password}&info={info}'
        none的时候考虑：只有1个参数、替换第一个参数、替换中间的参数、替换最后一个参数
        empty的时候，参数值自动为空